@model OnlineStore.Common.DTOs.ProductWithMeasureDto
@inject OnlineStore.Common.DTOs.CurrentUserDto CurrentUser
@{
    ViewData["Title"] = "View";
}
<style>

    .Carousel_description {
        flex: 0 0 auto;
        max-height: 1000px;
    }

    #Others {
        flex: 1;
        text-align: left;
    }

    #Description {
        text-align: left;
    }

    .notification {
        background-color: #4CAF50;
        color: white;
        text-align: center;
        padding: 10px;
        position: fixed;
        top: 0;
        left: 50%;
        transform: translateX(-50%);
        z-index: 9999;
        transition: opacity 0.5s;
    }

        .notification.hidden {
            opacity: 0;
        }

    .carousel-item img {
        margin-left: auto;
        margin-right: auto;
        width: 20vw;
        height: 50vh;
        object-fit: contain;
        position: center;
    }
</style>
<input type="hidden" id="productIdHidden" name="productId" value="@Model.Id" />
<input type="hidden" id="isUserAuthenticatedHidden" name="isUserAuthenticated" value="@CurrentUser.IsAuthenticated" />
<div class="container text-center">
    <div class="row">
        <div id="Carousel_Description" class="col-8">
            <div id="carouselExampleDark" class="carousel carousel-dark slide" data-bs-ride="carousel">
                <div class="carousel-indicators">
                    @for (int i = 0; i < Model.Images.Count; i++)
                    {
                        if (i == 0)
                        {
                            <button type="button" data-bs-target="#carouselExampleDark" data-bs-slide-to="@i" class="active" aria-current="true" aria-label="Slide @i"></button>

                        }
                        else
                        {
                            <button type="button" data-bs-target="#carouselExampleDark" data-bs-slide-to="@i" aria-label="Slide @i"></button>

                        }
                    }
                </div>
                <div class="carousel-inner">
                    @for (int i = 0; i < Model.Images.Count; i++)
                    {
                        @if (i == 0)
                        {
                            <div class="carousel-item active" data-bs-interval="2000">
                                <img src="data:image/png;base64,@Convert.ToBase64String(Model.Images[i])" class="d-block">
                            </div>
                        }
                        else
                        {

                            <div class="carousel-item" data-bs-interval="2000">
                                <img src="data:image/png;base64,@Convert.ToBase64String(Model.Images[i])" class="d-block">
                            </div>
                        }
                    }
                </div>
                <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleDark" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleDark" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </button>
            </div>
        </div>
        <div id="Others" class="col-4">
            <h5>@Model.Name</h5>
            @if (Model.Discount > 0)
            {
                <span>@($"Discount: {Model.Discount} %")</span>
                <p class="card-text">

                    <span style="text-decoration: line-through;">@($"{Model.Price} USD")</span>
                    <span class="card-text">@($"{Model.Price - (Model.Price * Model.Discount) / 100} USD") </span>
                </p>
            }
            else
            {
                <p class="card-text">@($"{Model.Price} USD")</p>
            }
            <div class="form-group">
                <label asp-for="MeasureId" class="control-label">Select Measure</label>
                <select asp-for="MeasureId" class="form-control" id="productMeasureDropdown">  </select>  <span> <button onclick="AddToWishList()" class="btn btn-secondary"><i class="bi bi-heart"></i></button></span>
               
                <span asp-validation-for="MeasureId" class="text-danger"></span>
            </div>
            <div>
                <button onclick="AddToCart()" class="btn btn-secondary"><i class="bi bi-cart-plus"></i></button>
                <button onclick="AddToWishList()" class="btn btn-secondary"><i class="bi bi-heart"></i></button>
                @if (CurrentUser.RoleId == 1)
                {
                    <a href="@Url.Action("AddProductMeasure", "Product", new { id = Model.Id })" class="btn btn-secondary">Add Stock</a>
                    <a href="@Url.Action("EditProduct", "Product", new { id = Model.Id })" class="btn btn-secondary">Edit Product</a>
                }
            </div>
        </div>
    </div>
    <div class="row" id="Description">
        <h3>Description </h3>
        <p>@Model.Description</p>
    </div>
    <div id="notification" class="notification hidden"></div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="~/js/ProductDetails/ProductMeasuresList.js"></script>
<script type="text/javascript">new ProductMeasuresList()</script>
<script src="~/js/ProductDetails/AddToCart.js"></script>
<script src="~/js/ProductDetails/AddToWishList.js"></script>
